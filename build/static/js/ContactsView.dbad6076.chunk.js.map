{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Components/contactForm/ContactForm.module.css","Components/contactList/ContactList.module.css","Components/filter/Filter.module.css","redux/contact/contact-operations.js","redux/contact/contacts-selectors.js","Components/contactForm/ContactForm.js","Components/contactList/ContactList.js","Components/filter/Filter.js","views/ContactsView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","dispatch","a","fetchContactRequest","axios","get","data","fetchContactSuccess","fetchContactError","message","contact","addContactRequest","post","addContactSuccess","addContactError","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","getLoading","state","contacts","loading","getFilter","filter","getAllContacts","items","getVisibleContacts","createSelector","normolizedFilter","toLowerCase","name","includes","getContactName","map","ContactForm","useState","setName","number","setNumber","useDispatch","loadingConntacts","useSelector","names","onSubmit","useCallback","contactsOperations","useEffect","handleChange","event","target","console","warn","checkUniqueContact","find","reset","preventDefault","alert","className","style","formStyle","inputStyle","type","placeholder","onChange","Loader","ContactList","deleteContact","id","dataset","itemContact","itemContactBtn","onClick","data-id","Filter","contactsActions","inputFilter","ContactsView"],"mappings":"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","file":"static/js/ContactsView.dbad6076.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formStyle\":\"ContactForm_formStyle__13BJ1\",\"inputStyle\":\"ContactForm_inputStyle__3zEtp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemContact\":\"ContactList_itemContact__2fZ9P\",\"itemContactBtn\":\"ContactList_itemContactBtn__1o9gS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputFilter\":\"Filter_inputFilter__2HVL4\"};","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n} from './contact-actions';\n\nconst fetchContact = () => async dispatch => {\n  dispatch(fetchContactRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactError(error.message));\n  }\n};\n\nconst addContact = contact => async dispatch => {\n  const contacts = { contact };\n\n  dispatch(addContactRequest());\n\n  try {\n    const { data } = await axios.post('/contacts', contact);\n    dispatch(addContactSuccess({ ...data }));\n  } catch (error) {\n    dispatch(addContactError(error.message));\n  }\n};\n\nconst deleteContact = contactId => async dispatch => {\n  dispatch(deleteContactRequest());\n\n  try {\n    const { data } = await axios.delete(`/contacts/${contactId}`);\n    dispatch(deleteContactSuccess(contactId));\n  } catch (error) {\n    dispatch(deleteContactError(error.message));\n  }\n};\n\nexport default { fetchContact, addContact, deleteContact };\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getLoading = state => state.contacts.loading;\n\nexport const getFilter = state => state.contacts.filter;\n\nconst getAllContacts = state => state.contacts.items;\n\nexport const getVisibleContacts = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    const normolizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normolizedFilter),\n    );\n  },\n);\n\nexport const getContactName = createSelector([getAllContacts], contacts => {\n  return contacts.map(({ name }) => name);\n});\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport contactsOperations from '../../redux/contact/contact-operations';\nimport style from './ContactForm.module.css';\nimport { getLoading } from '../../redux/contact/contacts-selectors';\nimport { getContactName } from '../../redux/contact/contacts-selectors';\nimport Loader from '../loader/Loader';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const loadingConntacts = useSelector(getLoading);\n  const names = useSelector(getContactName);\n\n  const onSubmit = useCallback(\n    data => {\n      dispatch(contactsOperations.addContact(data));\n    },\n    [dispatch],\n  );\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContact());\n  }, [dispatch]);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        console.warn(`Type input name- ${name} not exist`);\n    }\n  };\n\n  const checkUniqueContact = name => {\n    const findeContact = !names.find(contact => contact === name);\n    return findeContact;\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    checkUniqueContact(name);\n\n    if (name !== '') {\n      if (!checkUniqueContact(name)) {\n        alert(`'${name} isalready in contacts'`);\n        return;\n      } else {\n        onSubmit({ name: name, number: number });\n        reset();\n      }\n      return;\n    }\n    alert('Enter the name and number');\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={style.formStyle}>\n        <label>\n          Name\n          <input\n            className={style.inputStyle}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter name\"\n            value={name}\n            onChange={handleChange}\n          ></input>\n        </label>\n\n        <label>\n          Number\n          <input\n            className={style.inputStyle}\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"Enter phone namber\"\n            value={number}\n            onChange={handleChange}\n          ></input>\n        </label>\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n      {loadingConntacts && <Loader />}\n    </>\n  );\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport contactsOperations from '../../redux/contact/contact-operations';\nimport { getVisibleContacts } from '../../redux/contact/contacts-selectors';\nimport style from './ContactList.module.css';\n\nfunction ContactList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getVisibleContacts);\n\n  const deleteContact = event => {\n    const id = event.target.dataset.id;\n    dispatch(contactsOperations.deleteContact(id));\n  };\n\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={style.itemContact}>\n          <p>\n            {name}: {number}\n            <button\n              className={style.itemContactBtn}\n              type=\"button\"\n              onClick={deleteContact}\n              data-id={id}\n            >\n              Delete\n            </button>\n          </p>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as contactsActions from '../../redux/contact/contact-actions';\nimport style from './Filter.module.css';\nimport { getFilter } from '../../redux/contact/contacts-selectors';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const value = useSelector(getFilter);\n\n  const onChange = useCallback(\n    event => {\n      dispatch(contactsActions.filterContact(event.target.value));\n    },\n    [dispatch],\n  );\n\n  return (\n    <label>\n      Find contacts by name\n      <input\n        className={style.inputFilter}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      ></input>\n    </label>\n  );\n}\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport ContactForm from '../Components/contactForm/ContactForm';\nimport ContactList from '../Components/contactList/ContactList';\nimport Filter from '../Components/filter/Filter';\n\nconst ContactsView = () => {\n  return (\n    <>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default ContactsView;\n"],"sourceRoot":""}