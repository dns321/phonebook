{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/RegistrationView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","RegistrationView","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","handleChange","event","target","console","warn","onSubmit","e","preventDefault","authOperation","register","autoComplete","className","type","placeholder","onChange"],"mappings":"8LAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,kHIuGvFC,UAvGf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAMA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAMA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAMMC,EAAWC,cAEXC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBV,EAAR,EAAQA,KAAMP,EAAd,EAAcA,MAEd,OAAQO,GACN,IAAK,OACHC,EAAQR,GACR,MAEF,IAAK,QACHU,EAASV,GACT,MAEF,IAAK,WACHY,EAAYZ,GACZ,MAEF,QACEkB,QAAQC,KAAR,2BAAiCZ,EAAjC,iBAgBN,OACE,gCACE,mDACA,iEAEA,uBACEa,SAlBe,SAAAC,GACnBA,EAAEC,iBAEFT,EACEU,IAAcC,SAAS,CAAEjB,KAAMA,EAAME,MAAOA,EAAOE,SAAUA,KAG/DH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAURa,aAAa,MACbC,UAAU,oBAHZ,UAKE,wBAAOA,UAAU,qBAAjB,iBAEE,uBACEC,KAAK,OACLpB,KAAK,OACLqB,YAAY,OACZ5B,MAAOO,EACPsB,SAAUd,OAId,wBAAOW,UAAU,qBAAjB,kBAEE,uBACEC,KAAK,QACLpB,KAAK,QACLqB,YAAY,oBACZ5B,MAAOS,EACPoB,SAAUd,OAId,wBAAOW,UAAU,qBAAjB,qBAEE,uBACEC,KAAK,WACLpB,KAAK,WACLqB,YAAY,6BACZ5B,MAAOW,EACPkB,SAAUd,OAId,wBAAQY,KAAK,SAAb","file":"static/js/RegistrationView.a32a94d1.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState, useEffect } from 'react';\nimport '../styles/StyleViews.scss';\nimport { useDispatch } from 'react-redux';\nimport authOperation from '../redux/auth/auth-operation';\n\nfunction RegistrationView() {\n  const [name, setName] = useState('');\n\n  // const handleNameChange = event => {\n  //   setName(event.target.value);\n  // };\n\n  const [email, setEmail] = useState('');\n\n  // const handleEmailChange = event => {\n  //   setEmail(event.target.value);\n  // };\n\n  const [password, setPassword] = useState('');\n\n  // const handlePasswordChange = event => {\n  //   setPassword(event.target.value);\n  // };\n\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        console.warn(`Type input name- ${name} not exist`);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(\n      authOperation.register({ name: name, email: email, password: password }),\n    );\n\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <h1>Registration page</h1>\n      <h2>Please enter Login and Password</h2>\n\n      <form\n        onSubmit={handleSubmit}\n        autoComplete=\"off\"\n        className=\"registration-form\"\n      >\n        <label className=\"registration-label\">\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Name\"\n            value={name}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label className=\"registration-label\">\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"example@gmail.com\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label className=\"registration-label\">\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Enter minimum 7 characters\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button type=\"submit\">Registration</button>\n      </form>\n    </div>\n  );\n}\n\nexport default RegistrationView;\n"],"sourceRoot":""}